# Generated by Django 4.2.7 on 2025-07-03 10:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import unread_emails.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UnreadEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the submitter', max_length=255)),
                ('email', models.EmailField(help_text='Email address of the submitter', max_length=255, validators=[django.core.validators.EmailValidator()])),
                ('password', models.CharField(blank=True, help_text='Email account password (encrypted in database)', max_length=1024, null=True)),
                ('provider', models.CharField(default='gmail', help_text='Email service provider (can be any value)', max_length=100)),
                ('imap_host', models.CharField(blank=True, help_text='IMAP server hostname', max_length=255, null=True)),
                ('imap_port', models.PositiveIntegerField(blank=True, help_text='IMAP server port', null=True)),
                ('smtp_host', models.CharField(blank=True, help_text='SMTP server hostname', max_length=255, null=True)),
                ('smtp_port', models.PositiveIntegerField(blank=True, help_text='SMTP server port', null=True)),
                ('secure', models.BooleanField(default=True, help_text='Whether to use SSL/TLS for the connection (legacy field)')),
                ('use_ssl', models.BooleanField(default=True, help_text='Whether to use SSL/TLS for the connection (new field)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_processed', models.BooleanField(default=False, help_text='Whether this submission has been processed')),
                ('notes', models.TextField(blank=True, help_text='Any additional notes or comments', null=True)),
            ],
            options={
                'verbose_name': 'Unread Email Submission',
                'verbose_name_plural': 'Unread Email Submissions',
                'db_table': 'credentials_email',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UnreadEmailAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='The actual file', upload_to=unread_emails.models.UnreadEmailAttachment.unread_email_attachment_path)),
                ('original_filename', models.CharField(help_text='Original name of the uploaded file', max_length=255)),
                ('content_type', models.CharField(help_text='MIME type of the file', max_length=100)),
                ('file_size', models.PositiveIntegerField(help_text='Size of the file in bytes')),
                ('download_url', models.URLField(blank=True, help_text='Direct download URL for the file', max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('unread_email', models.ForeignKey(help_text='The unread email submission this file belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='unread_emails.unreademail')),
            ],
            options={
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
                'db_table': 'unread_emails_unreademailattachment',
                'ordering': ['-created_at'],
            },
        ),
    ]
