# Generated by Django 4.2.7 on 2025-07-02 06:55

import campaigns.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the campaign', max_length=255)),
                ('subject', models.CharField(help_text='Email subject line', max_length=255)),
                ('body', models.TextField(help_text='HTML content of the email')),
                ('email', models.EmailField(help_text='Email address used to send the campaign', max_length=255, validators=[django.core.validators.EmailValidator()])),
                ('password', models.CharField(blank=True, help_text='Email account password (encrypted in database)', max_length=1024, null=True)),
                ('provider', models.CharField(choices=[('gmail', 'Gmail'), ('custom', 'Custom')], default='gmail', help_text='Email service provider', max_length=100)),
                ('imap_host', models.CharField(blank=True, help_text='IMAP server hostname (leave blank to use provider defaults)', max_length=255, null=True)),
                ('imap_port', models.PositiveIntegerField(blank=True, help_text='IMAP server port (leave blank to use provider defaults)', null=True)),
                ('smtp_host', models.CharField(blank=True, help_text='SMTP server hostname (leave blank to use provider defaults)', max_length=255, null=True)),
                ('smtp_port', models.PositiveIntegerField(blank=True, help_text='SMTP server port (leave blank to use provider defaults)', null=True)),
                ('use_ssl', models.BooleanField(default=True, help_text='Whether to use SSL/TLS for the connection')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Any additional notes or comments', null=True)),
                ('created_by', models.ForeignKey(help_text='User who created this campaign', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Campaign',
                'verbose_name_plural': 'Email Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignEmailAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='The actual file', upload_to=campaigns.models.campaign_attachment_path)),
                ('original_filename', models.CharField(help_text='Original name of the uploaded file', max_length=255)),
                ('content_type', models.CharField(help_text='MIME type of the file', max_length=100)),
                ('file_size', models.PositiveIntegerField(help_text='Size of the file in bytes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_campaign', models.ForeignKey(help_text='The email campaign this file is attached to', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='campaigns.emailcampaign')),
            ],
            options={
                'verbose_name': 'Campaign Attachment',
                'verbose_name_plural': 'Campaign Attachments',
                'ordering': ['-created_at'],
            },
        ),
    ]
